<!-- language file start -->

//////////////////////////////////////////////////////////
// General informations about the plugin ("gi_" prefix) //
//////////////////////////////////////////////////////////

// The name of the question type
gi_name#:#Interactive SQL Question

// A short information text introducing users to the question type
gi_info#:#This question type makes it possible to interactively check the SQL skills of participants. The examinees are given the opportunity to execute their SQL queries directly in the browser on the basis of SQL.js and thus receive direct feedback on the functionality of their written queries. The levies are assessed fully automatically based on various metrics on the output relation.

///////////////////////////////////////////////////////////////
// Strings used in the different output areas ("ai_" prefix) //
///////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////
// Strings used in the sequence area ("ai_sea_" prefix) //
//////////////////////////////////////////////////////////

// The text shown on the execute buttons within the sequence area
ai_sea_exec_text#:#Execute

//////////////////////////////////////////////////////////////////////////////
// Strings used in the edit mode of the sequence area ("ai_sea_eo_" prefix) //
//////////////////////////////////////////////////////////////////////////////

// The name of the sequence area as shown in edit mode
ai_sea_eo_name#:#SQL Sequences

// Some information on the sequence area as shown in edit mode
ai_sea_eo_info#:#An interactive SQL query consists of three sequences SQL besides the usual components title, author, description, question and working time. These sequences - called A, B and C - are executed sequentially each time they pass through SQL.js. The sequences A and C are specified by the questioner, while the sequence B must be developed by the candidate. The basis for the evaluation of inquiries is the last output relation that occurs in the entire execution. This essentially allows two types of questions:<br /><br /><dl><dt> Question on a SELECT statement </dt><dd>The questioner uses sequence A to populate the question database with content. For example, he creates relations and fills them with tuples. In Sequence B, the examinee is asked to write a SELECT statement. Sequence C would remain empty in this case. By this the output from the written SELECT query would form the basis of the evaluation.</dd><br /><dt> Question on CREATE TABLE, INSERT INTO, DELETE FROM, UPDATE, usw. </dt><dd>Also in this case sequence A can be used to prepare the database for the question. The difference of this type of question is that the candidate in sequence B just should not write a SELECT request and therefore there is no verifiable output relation. This output relation can be generated by the examiner in sequence C, whereby the changes to the database can be checked perfectly.</dd><br /><br />Especially in the case of the first question type, it may make sense to ban changes to the database in sequence B. If this is desired, activate the integrity check. In this case Sequence B is checked for "CREATE TABLE", "ALTER TABLE", "DROP TABLE", "INSERT INTO", "UPDATE" or "DELETE FROM" statements. Is at least one of them part of the query, Sequence B is not accepted.
sequences_info_error#:#To create a question, sequence B is not allowed to be empty.

// The headers for the sequence A, B and C input areas as shown in edit mode
ai_sea_eo_seq_a#:#Sequence A:
ai_sea_eo_seq_b#:#Sequence B:
ai_sea_eo_seq_c#:#Sequence C:

// The header for the integrity check input as shown in edit mode
ai_sea_eo_ic#:#Integrity Check:

// The error messages as shown if the edit forms of the sequence area are not complete
ai_sea_eo_error#:#To create a question, sequence B is not allowed to be empty.

////////////////////////////////////////////////////////////////////////////////
// Strings used in the output mode of the sequence area ("ai_sea_qo_" prefix) //
////////////////////////////////////////////////////////////////////////////////

// The header of the task
ai_sea_qo_task#:#Task:

// The header of the input area (sequence b as this is the one students see)
ai_sea_qo_seq_b#:#Answer:

///////////////////////////////////////////////////////
// Strings used in the output area ("ai_oa_" prefix) //
///////////////////////////////////////////////////////

// The header of the output area
ai_oa_name#:#Output

////////////////////////////////////////////////////////////////////////////////////////////////
// String used in the output area to display the status of the execution ("ai_oa_st_" prefix) //
////////////////////////////////////////////////////////////////////////////////////////////////

// String used to display a running execution
ai_oa_st_run#:#The SQL request(s) are in progress. Please wait ...

////////////////////////////////////////////////////////////////////////////////////////////
// String used in the output area to display errors of the execution ("ai_oa_er_" prefix) //
////////////////////////////////////////////////////////////////////////////////////////////

// Error message for a missing execution
ai_oa_er_no_exec#:#Please start the execution to get a result displayed. After each change of the SQL code a re-execution must take place.

// Error message for a error while db creation
ai_oa_er_db_crea#:#An error occurred while creating the database:

// Error message for a failed integrity check
ai_oa_er_int_che#:#Unauthorized changes to the database were detected. If you are the creator of the question, it might help to disable the integrity check.

// Error message for a missing visible output
ai_oa_er_no_vis#:#The requests do not provide a visible result. Is there a SELECT request?

// Error message for a error while running the SQL code
ai_oa_er_run_seq#:#Error while executing the SQL code:

///////////////////////////////////////////////////////////////////////////
// Strings used in the edit mode of the output area ("ai_oa_eo_" prefix) //
///////////////////////////////////////////////////////////////////////////

// Some information on the output area as shown in edit mode
ai_oa_eo_info#:#In order to be able to evaluate results on the basis of an output relation, comparison values are required. For this reason, it is imperative that the model solution is executed at least once before storing the question. Any change to the above sequences automatically causes a new execution to be necessary. Of course, the above sequences should not contain any errors.

// The error messages as shown if output area is not valid after editing
ai_oa_eo_error#:#A execution of the latest code has to be done before saving the question. It is not allowed to contain errors.

/////////////////////////////////////////////////////////
// Strings used in the scoring area ("ai_sca_" prefix) //
/////////////////////////////////////////////////////////

// The term used for describing points in scoring area
ai_sca_points#:#Points

/////////////////////////////////////////////////////////////////////////////
// Strings used in the edit mode of the scoring area ("ai_sca_eo_" prefix) //
/////////////////////////////////////////////////////////////////////////////

// The header for the scoring area in the edit mode
ai_sca_eo_name#:#Scoring

// Some information on the scoring area as shown in edit mode
ai_sca_eo_info#:#In order to enable an automatic evaluation of the answers, different metrics are used. The metrics are calculated over the output relation generated by the questioner and the output relation of the candidate and then compared with each other. The weighting of these individual values - in the form of points - is again the responsibility of the questioner.

// The error message as shown if scoring metric do not include points higher than 0
ai_sca_eo_error#:#The total possible score must be higher than 0.

// The warning displayed in edit mode of scoring area if there was no execution until now
ai_sca_eo_no_exec#:#To see the value of the scoring metric in your relation, please start an execution.

// The prefix text shown before displaying the real value of a metric
ai_sca_eo_out_text#:#The value of the scoring metric in your relation:

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Strings used in the edit mode of the scoring area to describe several scoring metrics ("ai_sca_eo_sm_" prefix) //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Strings used in the edit mode of the scoring area to describe the result lines metric ("ai_sca_eo_sm_rl_" prefix) //
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// The information text informating question creators about the result lines metric
ai_sca_eo_sm_rl_info#:#<b>Number of Tuples</b><br />One of the simplest metrics that can be used to evaluate queries is the number of tuples in the result. If the result of the examinee has the same number of tuples as the example solution, he will receive all points awarded for this metric. If his number of result tuples is different, then he does not get any points for this metric.

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Strings used in the edit mode of the scoring area to describe the functional dependencies metric ("ai_sca_eo_sm_fd_" prefix) //
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// The information text informating question creators about the functional dependencies metric
ai_sca_eo_sm_fd_info#:#<b>Functional Dependencies</b><br />This metric uses the functional dependencies of the result to compare the sample solution and the students solution. It is important that only the "minimal" functional dependencies are used (e.g., for A-> C, AB-> C would not be listed). The grading is done using the Jaccard distance: Points = Max. Score * (1-Jaccard distance).

////////////////////////////////////////////////////////////////////////////////////////
// Strings used in the solution output mode of the scoring area ("ai_sca_so_" prefix) //
////////////////////////////////////////////////////////////////////////////////////////

// The header for the scoring area in the solution output mode
ai_sca_so_name#:#Scoring metrics

// The header for the computed value of the scoring metric in the scoring area
ai_sca_so_computed_value#:#Computed Value

// The header for the points of the scoring metric in the scoring area
ai_sca_so_points#:#Points

// The header for the expected value of the scoring metric in the scoring area
ai_sca_so_expected_value#:#Expected Value

// The header for the maximum points of the scoring metric in the scoring area
ai_sca_so_max_points#:#Max. Points

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Strings used in the solution output mode of the scoring area to describe several scoring metrics ("ai_sca_eo_sm_" prefix) //
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Strings used in the solution output mode of the scoring area to describe the result lines metric ("ai_sca_eo_sm_rl_" prefix) //
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Header of the metric
ai_sca_so_sm_rl_info#:#<b>Number of Tuples</b>

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Strings used in the solution output mode of the scoring area to describe the functional dependencies metric ("ai_sca_eo_sm_fd_" prefix) //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Header of the metric
ai_sca_so_sm_fd_info#:#<b>Functional Dependencies</b>
